<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- [1] DadaSource 빈 선언 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:part02/memMapper.xml</value>
				<!-- 맵퍼등록하는곳 -->
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- Spring Jdbe나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager이 트랜잭션 관리자로 사용된다. -->
	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- [5] 선언적 트렌잭션: <tx:advice>태그를 이용한 트랜잭션 처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception"/> <!-- 여러개의 Porcess를 적용하기 위해 *를 사용한다. -->
			<!-- <tx:method name="deleteprocess" rollback-for="java.lang.NullPonterException"/> 예시: -->
		</tx:attributes>
	</tx:advice>
		<!-- 로킹 처리나 Transaction 사용할때 aop를 사용하요 정의 할 수 있다. -->
	<aop:config>
		<aop:pointcut expression="execution(* part02.ServiceImp.*Process(..))" id="aa"/> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aa"/>
	</aop:config>

	<!-- [6] MemDaoImp 빈 선언 -->
	<bean id="dao" class="part02.MemDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	
	<!-- [7] ServiceImp 빈 선언 -->
	<bean id="svc" class="part02.ServiceImp">
		<property name="dao" ref="dao" />
	</bean>
	
	<!-- [8] Controller 선언 -->
	<bean class="part02.MainController">
		<property name="svc" ref="svc" />
	</bean>

	<!-- [9] view 빈 선언 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>
